<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <parent>
    <!-- This parent pom provides a consistent set of dependencies to Vert.x, database access,
         and a number of tools for static verification. See https://github.com/susom/vertx-parent. -->
    <groupId>com.github.susom</groupId>
    <artifactId>vertx-parent</artifactId>
    <version>2.0-build-122</version>
  </parent>

  <artifactId>vertx-template</artifactId>
  <packaging>jar</packaging>
  <version>1.0-SNAPSHOT</version>

  <repositories>
    <repository>
      <id>artifact-registry</id>
      <url>https://us-west1-maven.pkg.dev/som-rit-infrastructure-prod/public-maven</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>

  <properties>
    <!-- This application will be packaged as a fat jar, and this class is the entry point. -->
    <main.class>com.github.susom.app.server.container.Main</main.class>
    <properties>${basedir}/local.properties</properties>
  </properties>

  <profiles>
    <!-- There are a number of profiles you inherit from the parent pom.
         For database drivers and database specific integration tests:

         -P hsql (default if no other profile is active)
         -P postgres
         -P oracle

         Some code analysis tools are mutually incompatible, so those profiles
         are grouped into two sets, enabled by system properties:

         -Dcheck1 (a.k.a. -Pcheck-errorprone,check-macker,check-forbidden,checkstyle)
         -Dcheck2 (a.k.a. -Pchecker)
         -->
    <profile>
      <id>coverage</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.jacoco</groupId>
            <artifactId>jacoco-maven-plugin</artifactId>
            <version>0.8.11</version>
            <executions>
              <execution>
                <id>default-prepare-agent</id>
                <goals>
                  <goal>prepare-agent</goal>
                </goals>
              </execution>
              <execution>
                <id>default-report</id>
                <goals>
                  <goal>report</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>create-schema</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>exec-maven-plugin</artifactId>
            <version>3.1.0</version>
            <executions>
              <execution>
                <phase>process-classes</phase>
                <goals>
                  <goal>java</goal>
                </goals>
              </execution>
            </executions>
            <configuration>
              <skip>false</skip>
              <classpathScope>test</classpathScope>
              <mainClass>com.github.susom.app.server.services.CreateSchema</mainClass>
              <systemProperties>
                <systemProperty>
                  <key>properties</key>
                  <value>${properties}</value>
                </systemProperty>
              </systemProperties>
              <arguments>
                <argument>-recreate</argument>
              </arguments>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <dependencies>
    <!-- You inherit the latest JUnit and VertxUnit libraries from the parent pom.
         Add your other dependencies here. -->
  </dependencies>

  <build>
    <plugins>
      <plugin>
        <!-- Unpack files from parent pom so later plugins can use them
             (some plugins require actual files for config rather than
             using resources) -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-dependency-plugin</artifactId>
        <version>2.10</version>
        <configuration>
          <outputDirectory>target/vertx-parent-files</outputDirectory>
          <artifactItems>
            <artifactItem>
              <groupId>${project.parent.groupId}</groupId>
              <artifactId>vertx-parent-file</artifactId>
              <version>${project.parent.version}</version>
            </artifactItem>
          </artifactItems>
          <includeArtifactIds>vertx-parent-files</includeArtifactIds>
        </configuration>
        <executions>
          <execution>
            <id>unpack-parent-files</id>
            <goals>
              <goal>unpack-dependencies</goal>
            </goals>
            <phase>generate-resources</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <!-- Run unit tests matching **/*(^(Db|Oracle|Hsql|Postgres))Test-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- Run database/system tests matching **/*(Db|Oracle|Hsql|Postgres)Test-->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-failsafe-plugin</artifactId>
      </plugin>
      <plugin>
        <!-- Create the combined executable jar -->
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
      </plugin>
    </plugins>
  </build>
</project>
